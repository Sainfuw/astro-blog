---
import type { GetStaticPaths, InferGetStaticPropsType } from "astro";
import BlogPost from "../../components/BlogPost.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";

type Post = {
  frontmatter: {
    title: string;
    tags: string[];
  };
  url: string;
};

export const getStaticPaths: GetStaticPaths = async () => {
  const allPosts = await Astro.glob("../posts/*.md");

  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.frontmatter.tags).flat()),
  ];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.frontmatter.tags.includes(tag),
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
};

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { tag } = Astro.params;
const { posts }: { posts: Post[] } = Astro.props;
---

<BaseLayout pageTitle={tag}>
  <p>Entradas etiquetadas con {tag}</p>
  <ul>
    {
      posts.map((post: { url: string; frontmatter: { title: string } }) => (
        <BlogPost title={post.frontmatter.title} url={post.url} />
      ))
    }
  </ul>
</BaseLayout>
